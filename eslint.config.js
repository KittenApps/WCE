import eslint from "@eslint/js";
import globals from "globals";
import tseslint from "typescript-eslint";
import * as deprecation from "eslint-plugin-deprecation";
import { fileURLToPath } from "node:url";
import { join } from "node:path";

export default tseslint.config(
  eslint.configs.recommended,
  ...tseslint.configs.recommendedTypeChecked,
  // ...tseslint.configs.stylisticTypeChecked,
  {
    files: ["src/**/*.{j,t}s"],
    ignores: ["node_modules/**/*.*", "types/**/*.d.ts"],
    plugins: { deprecation },
    languageOptions: {
      ecmaVersion: 2022,
      sourceType: "module",
      globals: { ...globals.browser, ...globals.es2021 },
      parser: tseslint.parser,
      parserOptions: { project: join(fileURLToPath(import.meta.url), "../tsconfig.json") },
    },
    rules: {
      "accessor-pairs": "error",
      "array-callback-return": "error",
      "arrow-body-style": "warn",
      "@typescript-eslint/ban-ts-comment": "off",
      "@typescript-eslint/no-floating-promises": "off",
      "block-scoped-var": "error",
      camelcase: "warn",
      "capitalized-comments": "warn",
      "class-methods-use-this": "error",
      complexity: ["warn", 30],
      "consistent-return": "warn",
      "consistent-this": "error",
      "default-case-last": "error",
      "default-param-last": "error",
      "deprecation/deprecation": "warn",
      "dot-notation": ["error", { allowKeywords: true }],
      eqeqeq: ["warn", "smart"],
      "func-name-matching": "error",
      "func-names": ["warn", "as-needed"],
      "func-style": "off",
      "grouped-accessor-pairs": "error",
      "guard-for-in": "error",
      "id-denylist": "error",
      "id-match": "error",
      "max-classes-per-file": "error",
      "max-nested-callbacks": "error",
      "no-alert": "error",
      "no-array-constructor": "error",
      "no-await-in-loop": "warn",
      "no-bitwise": ["error", { int32Hint: true }],
      "no-caller": "error",
      "no-constructor-return": "error",
      "no-div-regex": "error",
      "no-duplicate-imports": "error",
      "no-else-return": "warn",
      "no-empty-function": "error",
      "no-eq-null": "warn",
      "no-eval": "error",
      "no-extend-native": "error",
      "no-extra-bind": "error",
      "no-extra-label": "error",
      "no-implicit-globals": "error",
      "no-implied-eval": "error",
      "no-invalid-this": ["error", { capIsConstructor: true }],
      "no-iterator": "error",
      "no-label-var": "error",
      "no-lone-blocks": "error",
      "no-lonely-if": "error",
      "no-loop-func": "warn",
      "no-multi-assign": "error",
      "no-multi-str": "error",
      "no-nested-ternary": "error",
      "no-new": "error",
      "no-new-func": "error",
      "no-new-wrappers": "error",
      "no-octal-escape": "error",
      "no-promise-executor-return": "warn",
      "no-proto": "error",
      "no-restricted-exports": "error",
      "no-restricted-globals": "error",
      "no-restricted-imports": "error",
      "no-restricted-properties": "error",
      "no-restricted-syntax": "error",
      "no-return-assign": "error",
      "no-script-url": "error",
      "no-self-compare": "error",
      "no-sequences": "error",
      "no-shadow": "error",
      "no-template-curly-in-string": "error",
      "no-throw-literal": "error",
      "no-undef-init": "warn",
      "no-undefined": "warn",
      "no-undef": "off",
      "no-underscore-dangle": "warn",
      "no-unmodified-loop-condition": "error",
      "no-unneeded-ternary": "error",
      "no-unreachable-loop": "error",
      "no-unused-expressions": "error",
      "no-useless-call": "error",
      "no-useless-computed-key": "error",
      "no-useless-concat": "error",
      "no-useless-constructor": "error",
      "no-useless-rename": "error",
      "no-useless-return": "error",
      "no-var": "warn",
      "no-void": "error",
      "no-warning-comments": "warn",
      "object-shorthand": "warn",
      "operator-assignment": "warn",
      "prefer-arrow-callback": "warn",
      "prefer-const": "warn",
      "prefer-destructuring": "warn",
      "prefer-exponentiation-operator": "error",
      "prefer-numeric-literals": "error",
      "prefer-object-has-own": "error",
      "prefer-object-spread": "error",
      "prefer-promise-reject-errors": "error",
      "prefer-regex-literals": "error",
      "prefer-rest-params": "error",
      "prefer-spread": "error",
      "prefer-template": "warn",
      radix: ["error", "as-needed"],
      "require-atomic-updates": "error",
      "require-await": "error",
      "sort-vars": "error",
      strict: "error",
      "symbol-description": "error",
      "unicode-bom": ["error", "never"],
      "vars-on-top": "error",
      yoda: ["error", "never"],
    },
  }
);
